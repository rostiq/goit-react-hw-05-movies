{"version":3,"file":"static/js/115.e02886e0.chunk.js","mappings":"gMAGaA,GAAaC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,qT,mHCAVE,EAAUF,EAAAA,GAAAA,IAAH,2DAKPG,GAAaH,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wU,uGC+CvB,UA7Ce,WACX,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACFL,IACAM,EAAAA,EAAAA,IAASN,GAAOO,KAAKH,EAE5B,GAAE,CAACJ,IASJ,OACI,+BACI,UAAC,IAAD,YACI,kBAAMQ,SAVG,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBb,EAAgB,CAAEC,MAAOW,EAAKE,SAASb,MAAMc,QAC7CH,EAAKI,OACR,EAKW,WACI,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,YAAYC,aAAa,SACrE,mBAAQH,KAAK,SAAb,sBAEHb,IACG,wBACKA,EAAUiB,KAAKC,QAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACxB,yBACI,SAAC,IAAD,CAAYC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAK,iBAAD,OAAmB3B,IAAjE,SACKwB,KAFAD,EADe,UAgBnD,C,mMCnDYK,EAAW,mCAAG,6GAEAC,EAAAA,EAAAA,IACrB,4FAHqB,cAEjBC,EAFiB,yBAKhBA,EAASV,KAAKC,SALE,gCAOvBU,QAAQC,IAAR,MAPuB,yDAAH,qDAWXC,EAAU,mCAAG,WAAMC,GAAN,gGAECL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,8CAFD,cAEhBJ,EAFgB,yBAKfA,EAASV,MALM,gCAOtBW,QAAQC,IAAR,MAPsB,yDAAH,sDAWVG,EAAY,mCAAG,WAAMD,GAAN,gGAEDL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,sDAFC,cAElBJ,EAFkB,yBAKjBA,GALiB,gCAOxBC,QAAQC,IAAR,MAPwB,yDAAH,sDAWZI,EAAc,mCAAG,WAAMF,GAAN,gGAEHL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,sDAFG,cAEpBJ,EAFoB,yBAKnBA,GALmB,gCAO1BC,QAAQC,IAAR,MAP0B,yDAAH,sDAWd1B,EAAQ,mCAAG,WAAMN,GAAN,gGAEG6B,EAAAA,EAAAA,IAAA,mGACuE7B,IAH1E,cAEd8B,EAFc,yBAKbA,GALa,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,qD","sources":["components/Home/Home.styled.js","components/MovieDetails/MovieDetails.styled.js","components/Movies/Movies.jsx","components/Services/API.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledList = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n\n\n  &:visited {\n    color: gray;\n  }\n\n  &:hover {\n    background-color: violet;\n    border-style: none;\n    color: bisque;\n    box-shadow: 4px 4px aquamarine;\n    height: 1rem;\n    text-decoration: none;\n    padding: 2px;\n  }\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 1rem;\n  margin: 1rem;\n`;\n\nexport const GetBackBtn = styled(NavLink)`\n  cursor: pointer;\n  background-color: violet;\n  border-style: none;\n  color: bisque;\n  box-shadow: 4px 4px aquamarine;\n  height: 1rem;\n  text-decoration: none;\n  padding: 2px;\n\n  &:hover {\n    box-shadow: 4px 4px rgba(127, 255, 212, 0.6);\n    background-color: rgba(238, 130, 238, 0.6);\n  }\n`;\n","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { queryApi } from \"components/Services/API\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Wrapper } from 'components/MovieDetails/MovieDetails.styled';\nimport {StyledList} from 'components/Home/Home.styled'\n\n\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    const [queryData, setQueryData] = useState(null);\n\n    useEffect(() => {\n        if (query) {\n            queryApi(query).then(setQueryData);\n        }\n    }, [query]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.currentTarget;\n        setSearchParams({ query: form.elements.query.value });\n        form.reset();\n    };\n\n    return (\n        <>\n            <Wrapper>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" name=\"query\" placeholder=\"type here\" autoComplete=\"off\" />\n                    <button type=\"submit\">enter</button>\n                </form>\n                {queryData &&\n                    <ul>\n                        {queryData.data.results.map(({ id, title }) => (\n                            <li key={id}>\n                                <StyledList to={`/movies/${id}`} state={{ from: `/movies?query=${query}` }}>\n                                    {title}\n                                </StyledList >\n                            </li>\n                        ))\n                        }\n                    </ul>\n\n                }\n            </Wrapper>\n\n\n        </>\n    );\n}\n\nexport default Movies;\n\n","import axios from 'axios';\n\nexport const trendingApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=d4b4feb49258af79577d4fcd29006df0'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieIdApi = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=d4b4feb49258af79577d4fcd29006df0`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieCastApi = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d4b4feb49258af79577d4fcd29006df0`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieReviewApi = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=d4b4feb49258af79577d4fcd29006df0`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const queryApi = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=d4b4feb49258af79577d4fcd29006df0&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["StyledList","styled","NavLink","Wrapper","GetBackBtn","useSearchParams","searchParams","setSearchParams","query","get","useState","queryData","setQueryData","useEffect","queryApi","then","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","name","placeholder","autoComplete","data","results","map","id","title","to","state","from","trendingApi","axios","response","console","log","movieIdApi","movieId","movieCastApi","movieReviewApi"],"sourceRoot":""}