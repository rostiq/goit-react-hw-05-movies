{"version":3,"file":"static/js/947.feb993c5.chunk.js","mappings":"iOA4EA,UA/DqB,WAAO,IAAD,IACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAWV,GAASW,KAAKP,EAC5B,GAAE,CAACJ,IAEJ,IACIY,EACAT,EADAS,MAAOC,EACPV,EADOU,YAAaC,EACpBX,EADoBW,aAAcC,EAClCZ,EADkCY,SAAUC,EAC5Cb,EAD4Ca,aAG1CC,EAAgB,IAAIC,KAAKF,GAAcG,mBAAmB,QAAS,CACrEC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGT,OACQ,UAAC,IAAD,YACI,SAAC,IAAD,CAAYC,GAAIlB,EAAhB,sBACCF,IAAa,iBAAKqB,MAAO,CACtBC,QAAS,OACTC,IAAK,OACLC,eAAgB,SAChBC,WAAY,aACZC,UAAW,QALD,WAOV,gBAAKL,MAAO,CACRC,QAAS,OACTK,WAAY,EACZC,MAAO,QAHX,UAKI,gBAAKC,IAAKnB,EAAW,yCACmBA,GAClCoB,EAASC,IAAKtB,OAExB,4BACI,4BACI,0BAAOA,KACP,qCAAaK,MACb,kCAAUH,MACV,uBAAIC,GAAY,yBAGpB,iBAAKS,MAAO,CACRC,QAAS,OACTC,IAAK,OAFT,WAII,SAAC,IAAD,CAAQH,GAAG,OAAX,mBACA,SAAC,IAAD,CAAQA,GAAG,SAAX,wBAEJ,SAAC,EAAAY,SAAD,CAAUC,UAAU,sCAApB,UACI,SAAC,KAAD,cAM3B,C,mHCvEYC,EAAUC,EAAAA,GAAAA,IAAH,2DAKPC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wU,mMCNVG,EAAW,mCAAG,6GAEAC,EAAAA,EAAAA,IACrB,4FAHqB,cAEjBC,EAFiB,yBAKhBA,EAASC,KAAKC,SALE,gCAOvBC,QAAQC,IAAR,MAPuB,yDAAH,qDAWXrC,EAAU,mCAAG,WAAMV,GAAN,gGAEC0C,EAAAA,EAAAA,IAAA,6CACiB1C,EADjB,8CAFD,cAEhB2C,EAFgB,yBAKfA,EAASC,MALM,gCAOtBE,QAAQC,IAAR,MAPsB,yDAAH,sDAWVC,EAAY,mCAAG,WAAMhD,GAAN,gGAED0C,EAAAA,EAAAA,IAAA,6CACiB1C,EADjB,sDAFC,cAElB2C,EAFkB,yBAKjBA,GALiB,gCAOxBG,QAAQC,IAAR,MAPwB,yDAAH,sDAWZE,EAAc,mCAAG,WAAMjD,GAAN,gGAEH0C,EAAAA,EAAAA,IAAA,6CACiB1C,EADjB,sDAFG,cAEpB2C,EAFoB,yBAKnBA,GALmB,gCAO1BG,QAAQC,IAAR,MAP0B,yDAAH,sDAWdG,EAAQ,mCAAG,WAAMC,GAAN,gGAEGT,EAAAA,EAAAA,IAAA,mGACuES,IAH1E,cAEdR,EAFc,yBAKbA,GALa,gCAOpBG,QAAQC,IAAR,MAPoB,yDAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","components/MovieDetails/MovieDetails.styled.js","components/Services/API.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { movieIdApi } from 'components/Services/API';\nimport { useEffect, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { Wrapper, GetBackBtn } from './MovieDetails.styled'\nimport { Styled } from 'components/Layout/Layout.styled';\nimport noimage from \"../../images/noimage.jpeg\";\n\n\n\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieData, setMovieData] = useState({});\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    useEffect(() => {\n        movieIdApi(movieId).then(setMovieData);\n    }, [movieId]);\n\n    const {\n        title, poster_path, vote_average, overview, release_date\n    } = movieData;\n\n    const formattedDate = new Date(release_date).toLocaleDateString(\"en-US\", {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n\n    return (\n            <Wrapper>\n                <GetBackBtn to={backLinkHref}>get back</GetBackBtn>\n                {movieData && <div style={{\n                    display: 'flex',\n                    gap: '1rem',\n                    justifyContent: \"center\",\n                    alignItems: \"flex-start\",\n                    marginTop: \"1rem\"\n                }}>\n                    <div style={{\n                        display: 'flex',\n                        flexShrink: 0,\n                        width: '25vw'\n                    }}>\n                        <img src={poster_path\n                            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                            : noimage} alt={title} />\n                    </div>\n                    <div>\n                        <div>\n                            <span>{title}</span>\n                            <p>release: {formattedDate}</p>\n                            <p>rate: {vote_average}</p>\n                            <p>{overview || 'No desrition yet'}</p>\n                        </div>\n\n                        <div style={{\n                            display: 'flex',\n                            gap: '4vw',\n                        }}>\n                            <Styled to=\"cast\">cast</Styled>\n                            <Styled to=\"review\">review</Styled>\n                        </div>\n                        <Suspense fallback={<p>loading...</p>}>\n                            <Outlet />\n                        </Suspense>\n                    </div>\n                </div>}\n            </Wrapper>\n    )\n}\n\nexport default MovieDetails;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 1rem;\n  margin: 1rem;\n`;\n\nexport const GetBackBtn = styled(NavLink)`\n  cursor: pointer;\n  background-color: violet;\n  border-style: none;\n  color: bisque;\n  box-shadow: 4px 4px aquamarine;\n  height: 1rem;\n  text-decoration: none;\n  padding: 2px;\n\n  &:hover {\n    box-shadow: 4px 4px rgba(127, 255, 212, 0.6);\n    background-color: rgba(238, 130, 238, 0.6);\n  }\n`;\n","import axios from 'axios';\n\nexport const trendingApi = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/movie/day?api_key=d4b4feb49258af79577d4fcd29006df0'\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieIdApi = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=d4b4feb49258af79577d4fcd29006df0`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieCastApi = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=d4b4feb49258af79577d4fcd29006df0`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const movieReviewApi = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=d4b4feb49258af79577d4fcd29006df0`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const queryApi = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=d4b4feb49258af79577d4fcd29006df0&query=${query}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movieId","useParams","useState","movieData","setMovieData","backLinkHref","useLocation","state","from","useEffect","movieIdApi","then","title","poster_path","vote_average","overview","release_date","formattedDate","Date","toLocaleDateString","year","month","day","to","style","display","gap","justifyContent","alignItems","marginTop","flexShrink","width","src","noimage","alt","Suspense","fallback","Wrapper","styled","GetBackBtn","NavLink","trendingApi","axios","response","data","results","console","log","movieCastApi","movieReviewApi","queryApi","query"],"sourceRoot":""}